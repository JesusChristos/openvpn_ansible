---
# tasks file for openvpn

- name: Create Server dirs and links
  file:                                                                         #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
    path: "~/{{ item }}"
    state: directory
  loop:
    - "{{ CERT_ROOT_DIR }}"

- name: Get Server template
  template:                                                                     #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_module.html
    src: "{{ item.name }}.j2" 
    dest: "{{ item.path }}"
  loop:
    - { name: "server.conf", path: "/etc/openvpn/server.conf" }
    - { name: "vars", path: "~/{{ CERT_ROOT_DIR }}/vars"}

- name: Build PKI
  command: 
    cmd: /usr/share/easy-rsa/easyrsa init-pki && export EASYRSA=$(pwd)                    #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html
  args:
    chdir: "~/{{ CERT_ROOT_DIR }}"

- name: "Build CA"
  become: yes
  shell: >                                                                     #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html
    yes "" | /usr/share/easy-rsa/easyrsa build-ca nopass;
  args: 
    chdir: "~/{{ CERT_ROOT_DIR }}"
    executable: /bin/bash

- name: Build DH
  command: "/usr/share/easy-rsa/easyrsa gen-dh"                                #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html
  args:
    chdir: "~/{{ CERT_ROOT_DIR }}"

- name: Build PEM key
  command: "/usr/share/easy-rsa/easyrsa gen-crl"
  args:
    chdir: "~/{{ CERT_ROOT_DIR }}"

- name: Build TA
  command: "openvpn --genkey --secret ta.key"                                 #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html
  args:
    chdir: "~/{{ CERT_ROOT_DIR }}"

- name: Build certificate server
  command: "/usr/share/easy-rsa/easyrsa build-server-full server nopass"      #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html
  args:
    chdir: "~/{{ CERT_ROOT_DIR }}"

- name: Copy server.key, server.crt, ca.crt, dh.pem, ta.key
  copy:                                                                       #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
    src: "~/{{ CERT_ROOT_DIR }}/{{ item.path }}/{{ item.name }}"
    dest: "/etc/openvpn/{{ item.name }}"
    remote_src: yes  
  loop:
    - { name: "server.crt", path: "pki/issued"}
    - { name: "server.key", path: "pki/private"}
    - { name: "ca.crt", path: "pki"}
    - { name: "crl.pem", path: "pki"}
    - { name: "dh.pem", path: "pki"}
    - { name: "ta.key", path: "."}

- name: Forward network packages
  shell: sysctl -w net.ipv4.ip_forward=1                                      #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html

- name: Allow OpenSSH rule
  ufw:                                                                        #https://docs.ansible.com/ansible/latest/collections/community/general/ufw_module.html
    rule: allow
    name: OpenSSH

- name: Allow OpenVPN rule
  ufw:                                                                        #https://docs.ansible.com/ansible/latest/collections/community/general/ufw_module.html
    rule: allow
    port: openvpn
    comment: "OpenVPN"

- name: Allow everything and enable UFW
  ufw:                                                                        #https://docs.ansible.com/ansible/latest/collections/community/general/ufw_module.html
    state: enabled
    policy: allow

- name: Added rules Firewall                                                  #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html       
  shell: iptables -I FORWARD -i tun0 -o eth0 -j ACCEPT &&                    
          iptables -I FORWARD -i eth0 -o tun0 -j ACCEPT &&
          iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

- name: Reloaded systemd / Restarted OpenVPN service
  systemd:                                                                    #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/systemd_module.html
    daemon_reload: yes
    name: openvpn 
    state: restarted

- name: Reloaded systemd
  systemd:                                                                    #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/systemd_module.html
    name: openvpn 
    state: started
    enabled: yes